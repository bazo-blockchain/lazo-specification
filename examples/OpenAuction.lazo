// Inspired by Solidity Example: https://solidity.readthedocs.io/en/v0.4.25/solidity-by-example.html#simple-open-auction
version 1.0

contract OpenAuction {
    address beneficiary
    int auctionEndTime

    // Current state of the auction
    address highestBidder
    int highestBid

    // Allowed withdrawals
    Map<address, int> pendingReturns

    bool ended

    event HighestBidIncreased(address bidder, int amount)
    event AuctionEnded(address winner, int amount)

    constructor(int biddingTime, address beneficiary){
        auctionEndTime = block.timestamp + biddingTime
        this.beneficiary = beneficiary
    }

    [Payable]
    [Pre: block.timestamp <= auctionEndTime]
    [Pre: msg.coins > highestBid]
    function void bid(){
        if(highestBid != 0){
            pendingReturns[highestBidder] += highestBid
        }

        highestBidder = msg.sender
        highestBid = msg.coins
        emit HighestBidIncreased(msg.sender, msg.coins)

    }

    function void withdraw(){
        int amount = pendingReturns[msg.sender]

        if(amount > 0){
            pendingReturns[msg.sender] = 0

            Account a = (Account) msg.sender
            a.transfer(amount).send()
        }
    }

    [Pre: block.timestamp >= auctionEndTime]
    [Pre: !ended]
    function void auctionEnd(){
        ended = true
        emit AuctionEnded(highestBidder, highestBid)

        Account a = (Account) beneficiary
        a.transfer(highestBid)
    }
}